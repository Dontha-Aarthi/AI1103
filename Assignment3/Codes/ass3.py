# -*- coding: utf-8 -*-
"""ass3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TpCshRftHkMUVhQWAqvTo6Ca3Pkheb-R
"""

from scipy.stats import poisson
import numpy as np
import random
import matplotlib.pyplot as plt
import seaborn as sn
import xlrd
import scipy as sp
import math

_lambda=1
simlen=100000

count=[]
#intialising all elements of array to 0
for i in range(0,11):
  count.append(0)

r=poisson.rvs(_lambda,size=simlen)
for j in range(0,11):
  for i in range(0,simlen):
    if(r[i]==j):
      count[j]=count[j]+1

sim_prob=[]

#generating array of simulated probabity
for i in range(0,11):
  sim_prob.append(count[i]/simlen)

sim_cdf=[]
for i in range(0,11):
  sim_cdf.append(0)

for i in range(0,11):
  for j in range(i,-1,-1):
    sim_cdf[i]=(sim_cdf[i]+sim_prob[j])

X = [0,1,2,3,4,5,6,7,8,9,10]

plt.xlim([0,10])
plt.ylim([0,2])
plt.title('SIMULATED CDF')
plt.xlabel('X')
plt.ylabel('F(X)')
markerline, stemlines, baseline = plt.stem(X,sim_cdf, '-')
plt.show()

theo_prob=[]

#generating array of theoritical values of CDF
for k in range(0,11):
  theo_prob.append(_lambda**k*math.exp(-_lambda)/math.factorial(k))

theo_cdf=[]
for i in range(0,11):
  theo_cdf.append(0)

for i in range(0,11):
  for j in range(i,-1,-1):
    theo_cdf[i]=(theo_cdf[i]+theo_prob[j])

plt.xlim([0,10])
plt.ylim([0,2])
plt.title('THEORITICAL CDF')
plt.xlabel('X')
plt.ylabel('F(X)')
markerline, stemlines, baseline = plt.stem(X,theo_cdf, '-')
plt.show()

prob_S = sim_cdf[4] - sim_cdf[1]
prob_T = theo_cdf[4] - theo_cdf[1]

data1 = {'theoritical probability':prob_T, 'simulated probability':prob_S}
prob_type = list(data1.keys())
prob = list(data1.values())
  
fig = plt.figure(figsize = (6, 4))
 
# creating the bar plot
plt.bar(prob_type,prob, color ='violet',width = 0.1)
plt.xlabel("Type Of Probability")
plt.ylabel("Probability")
plt.show()